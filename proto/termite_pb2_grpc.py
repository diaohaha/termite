# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
import grpc

import termite_pb2 as termite__pb2


class TermiteStub(object):
  # missing associated documentation comment in .proto file
  pass

  def __init__(self, channel):
    """Constructor.

    Args:
      channel: A grpc.Channel.
    """
    self.AddWorkFlow = channel.unary_unary(
        '/Termite/AddWorkFlow',
        request_serializer=termite__pb2.AddWorkFlowRequest.SerializeToString,
        response_deserializer=termite__pb2.AddWorkFlowResponse.FromString,
        )
    self.FinishWorkFlow = channel.unary_unary(
        '/Termite/FinishWorkFlow',
        request_serializer=termite__pb2.FinishWorkFlowRequest.SerializeToString,
        response_deserializer=termite__pb2.FinishWorkFlowResponse.FromString,
        )
    self.RecoverWorkFlow = channel.unary_unary(
        '/Termite/RecoverWorkFlow',
        request_serializer=termite__pb2.RecoverWorkFlowRequest.SerializeToString,
        response_deserializer=termite__pb2.RecoverWorkFlowResponse.FromString,
        )
    self.GetWorkFlowContext = channel.unary_unary(
        '/Termite/GetWorkFlowContext',
        request_serializer=termite__pb2.GetWorkFlowContextRequest.SerializeToString,
        response_deserializer=termite__pb2.GetWorkFlowContextResponse.FromString,
        )
    self.SetWorkFlowContext = channel.unary_unary(
        '/Termite/SetWorkFlowContext',
        request_serializer=termite__pb2.SetWorkFlowContextRequest.SerializeToString,
        response_deserializer=termite__pb2.SetWorkFlowContextResponse.FromString,
        )
    self.WorkStart = channel.unary_unary(
        '/Termite/WorkStart',
        request_serializer=termite__pb2.WorkStartRequest.SerializeToString,
        response_deserializer=termite__pb2.WorkStartResponse.FromString,
        )
    self.WorkFinish = channel.unary_unary(
        '/Termite/WorkFinish',
        request_serializer=termite__pb2.WorkFinishRequest.SerializeToString,
        response_deserializer=termite__pb2.WorkFinishResponse.FromString,
        )
    self.WorkError = channel.unary_unary(
        '/Termite/WorkError',
        request_serializer=termite__pb2.WorkErrorRequest.SerializeToString,
        response_deserializer=termite__pb2.WorkErrorResponse.FromString,
        )
    self.WorkDelay = channel.unary_unary(
        '/Termite/WorkDelay',
        request_serializer=termite__pb2.WorkDelayRequest.SerializeToString,
        response_deserializer=termite__pb2.WorkDelayResponse.FromString,
        )
    self.QueryWorkFlow = channel.unary_unary(
        '/Termite/QueryWorkFlow',
        request_serializer=termite__pb2.QueryWorkFlowRequest.SerializeToString,
        response_deserializer=termite__pb2.QueryWorkFlowResponse.FromString,
        )
    self.QueryWork = channel.unary_unary(
        '/Termite/QueryWork',
        request_serializer=termite__pb2.QueryWorkRequest.SerializeToString,
        response_deserializer=termite__pb2.QueryWorkResponse.FromString,
        )


class TermiteServicer(object):
  # missing associated documentation comment in .proto file
  pass

  def AddWorkFlow(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def FinishWorkFlow(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def RecoverWorkFlow(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def GetWorkFlowContext(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def SetWorkFlowContext(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def WorkStart(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def WorkFinish(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def WorkError(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def WorkDelay(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def QueryWorkFlow(self, request, context):
    """query
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def QueryWork(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')


def add_TermiteServicer_to_server(servicer, server):
  rpc_method_handlers = {
      'AddWorkFlow': grpc.unary_unary_rpc_method_handler(
          servicer.AddWorkFlow,
          request_deserializer=termite__pb2.AddWorkFlowRequest.FromString,
          response_serializer=termite__pb2.AddWorkFlowResponse.SerializeToString,
      ),
      'FinishWorkFlow': grpc.unary_unary_rpc_method_handler(
          servicer.FinishWorkFlow,
          request_deserializer=termite__pb2.FinishWorkFlowRequest.FromString,
          response_serializer=termite__pb2.FinishWorkFlowResponse.SerializeToString,
      ),
      'RecoverWorkFlow': grpc.unary_unary_rpc_method_handler(
          servicer.RecoverWorkFlow,
          request_deserializer=termite__pb2.RecoverWorkFlowRequest.FromString,
          response_serializer=termite__pb2.RecoverWorkFlowResponse.SerializeToString,
      ),
      'GetWorkFlowContext': grpc.unary_unary_rpc_method_handler(
          servicer.GetWorkFlowContext,
          request_deserializer=termite__pb2.GetWorkFlowContextRequest.FromString,
          response_serializer=termite__pb2.GetWorkFlowContextResponse.SerializeToString,
      ),
      'SetWorkFlowContext': grpc.unary_unary_rpc_method_handler(
          servicer.SetWorkFlowContext,
          request_deserializer=termite__pb2.SetWorkFlowContextRequest.FromString,
          response_serializer=termite__pb2.SetWorkFlowContextResponse.SerializeToString,
      ),
      'WorkStart': grpc.unary_unary_rpc_method_handler(
          servicer.WorkStart,
          request_deserializer=termite__pb2.WorkStartRequest.FromString,
          response_serializer=termite__pb2.WorkStartResponse.SerializeToString,
      ),
      'WorkFinish': grpc.unary_unary_rpc_method_handler(
          servicer.WorkFinish,
          request_deserializer=termite__pb2.WorkFinishRequest.FromString,
          response_serializer=termite__pb2.WorkFinishResponse.SerializeToString,
      ),
      'WorkError': grpc.unary_unary_rpc_method_handler(
          servicer.WorkError,
          request_deserializer=termite__pb2.WorkErrorRequest.FromString,
          response_serializer=termite__pb2.WorkErrorResponse.SerializeToString,
      ),
      'WorkDelay': grpc.unary_unary_rpc_method_handler(
          servicer.WorkDelay,
          request_deserializer=termite__pb2.WorkDelayRequest.FromString,
          response_serializer=termite__pb2.WorkDelayResponse.SerializeToString,
      ),
      'QueryWorkFlow': grpc.unary_unary_rpc_method_handler(
          servicer.QueryWorkFlow,
          request_deserializer=termite__pb2.QueryWorkFlowRequest.FromString,
          response_serializer=termite__pb2.QueryWorkFlowResponse.SerializeToString,
      ),
      'QueryWork': grpc.unary_unary_rpc_method_handler(
          servicer.QueryWork,
          request_deserializer=termite__pb2.QueryWorkRequest.FromString,
          response_serializer=termite__pb2.QueryWorkResponse.SerializeToString,
      ),
  }
  generic_handler = grpc.method_handlers_generic_handler(
      'Termite', rpc_method_handlers)
  server.add_generic_rpc_handlers((generic_handler,))
